Code to draw a square by Turtle-

from turtle import Turtle,Screen

tim = Turtle()
window = Screen()

tim.forward(100)
tim.left(90)
tim.forward(100)
tim.left(90)
tim.forward(100)
tim.left(90)
tim.forward(100)
tim.left(90)

window.exitonclick()

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>============================================================<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

Using alias for the same functionality below is the code-

import turtle as t  #alias 
tim = t.Turtle()
window = t.Screen()

tim.forward(100)
tim.left(90)
tim.forward(100)
tim.left(90)
tim.forward(100)
tim.left(90)
tim.forward(100)
tim.left(90)

window.exitonclick()

============================================================================================================================================================
Drawing a dashed line-


import turtle as t
tim = t.Turtle()
window = t.Screen()

for _ in range(15):
    tim.forward(10)
    tim.penup()
    tim.forward(10)
    tim.pendown()



window.exitonclick()

===============================================================================================================================================================

Code to draw various shapes-


import turtle as t
import random

tim = t.Turtle()
window = t.Screen()

colours = ["CornflowerBlue","DarkOrchid","IndianRed","DeepSkyBlue","wheat"]

def draw_shape(num_sides):
    angle = 360 / num_sides
    for _ in range(num_sides):
        tim.forward(100)
        tim.right(angle)

# here range will exclude the last index - [3,11)
for shape_side_n in range(3,11):
    tim.color(random.choice(colours))
    draw_shape(shape_side_n)

========================================================================================================================================================================

Generate a random walk-


import turtle as t
import random

tim = t.Turtle()
window = t.Screen()

colours = ["CornflowerBlue","DarkOrchid","IndianRed","DeepSkyBlue","wheat"]

directions = [0,90,180,270]
tim.pensize(15)
tim.speed("fastest")

for _ in range(200):
    tim.color(random.choice(colours))
    tim.forward(30)
    tim.setheading(random.choice(directions))
window.exitonclick()



window.exitonclick()

=========================================================================================================================================

Tuple in Python-

my_tuple = (1,3,8) #Tuple definition

my_tuple[2] = 12 #will throw error as tuple cannot be modified

==========================================================================================================================================

Python tuples to generate random RGB tuples


import turtle as t
import random

tim = t.Turtle()
window = t.Screen()
t.colormode(255)

def random_color():
    r = random.randint(0,255)
    g = random.randint(0,255)
    b = random.randint(0,255)
    random_color = (r,g,b)
    return random_color



directions = [0,90,180,270]
tim.pensize(15)
tim.speed("fastest")

for _ in range(200):
    tim.color(random_color())
    tim.forward(30)
    tim.setheading(random.choice(directions))
window.exitonclick()

==========================================================================================================================================

Draw a Spirograph-


import turtle as t
import random

tim = t.Turtle()
window = t.Screen()
t.colormode(255)

def random_color():
    r = random.randint(0,255)
    g = random.randint(0,255)
    b = random.randint(0,255)
    random_color = (r,g,b)
    return random_color

tim.speed("fastest")

def draw_spirograph(size_of_gap):
    for _ in range(int(360 / size_of_gap)):
        tim.color(random_color())
        tim.circle(100)
        tim.setheading(tim.heading() + size_of_gap)

draw_spirograph(5)

window.exitonclick()

==========================================================================================================================================



